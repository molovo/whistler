{
  "name": "gulp-roole",
  "version": "0.1.0",
  "description": "A plugin for Gulp to Compile Roole files to CSS",
  "keywords": [
    "gulpplugin"
  ],
  "homepage": "https://github.com/chrisenytc/gulp-roole",
  "bugs": {
    "url": "https://github.com/chrisenytc/gulp-roole/issues"
  },
  "author": {
    "name": "Christopher EnyTC",
    "email": "chrisenytc@gmail.com",
    "url": "https://github.com/chrisenytc"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisenytc/gulp-roole.git"
  },
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*.js --reporter spec",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "dependencies": {
    "roole": "~0.9.0",
    "through2": "*",
    "gulp-util": "~2.2.0"
  },
  "devDependencies": {
    "mocha": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "istanbul": "*",
    "event-stream": "*",
    "should": "~2.1.0"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# Gulp Roole\n[![Build Status](https://travis-ci.org/chrisenytc/gulp-roole.png?branch=master)](https://travis-ci.org/chrisenytc/gulp-roole) [![Dependency Status](https://gemnasium.com/chrisenytc/gulp-roole.png)](https://gemnasium.com/chrisenytc/gulp-roole) [![NPM version](https://badge-me.herokuapp.com/api/npm/gulp-roole.png)](http://badges.enytc.com/for/npm/gulp-roole) [![Coverage Status](https://coveralls.io/repos/chrisenytc/gulp-roole/badge.png)](https://coveralls.io/r/chrisenytc/gulp-roole) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/chrisenytc/gulp-roole/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n> A plugin for Gulp to Compile Roole files to CSS\n\n## Usage\n\nFirst, install `gulp-roole` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-roole\n```\n\nThen, add it to your `gulpfile.js`:\n\n```javascript\nvar roole = require(\"gulp-roole\");\nvar options = {};\n\ngulp.src(\"./src/*.roo\")\n\t.pipe(roole(options))\n\t.pipe(gulp.dest(\"./dist\"));\n```\n\n## API\n\n### roole(options)\n\n#### options.base\nType: `String`\n\nAn absolute path. Relative paths do not start with ./ and ../ are relative this path. If no specified, these relative paths are not translated.\n\n#### options.filename\nType: `String`\nDefault value: `base`\n\nThe absolute path of the file containg this Roole code. Relative paths starting with ./ or ../ are relative to the directory of this path. If not specified, these relative paths are relative to the value of the base option. If that's also unspecified, these relative paths are not translated.\n\n#### options.out\nType: `String`\nDefault value: `base`\n\nThe absolute path of the directory where the file containing the generated CSS code lives. Translated relative paths are relative to this directory.\n\n#### options.indent\nType: `String`\nDefault value: `'\\t'`\n\nA indentation string to use in CSS.\n\n#### options.precision\nType: `Integer`\nDefault value: `3`\n\nMax number of decimal digits to use in CSS\n\n#### options.prefix\nType: `String`\nDefault value: `'webkit moz ms o'`\n\nA space-separated vendor names to use for prefixing.\n\n#### options.skipPrefixed\nType: `Boolean`\nDefault value: `false`\n\nNot generate prefixed rule that already exists.\n\n#### options.imports\nType: `JSON Object`\nDefault value: `{}`\n\nAn object literal containing the files to be imported. When a file that needs to be imported exists in this object, it will be used directly and no external requests are made.\n\nThe key is the absolute file path, and the value is the file content.\n\nWhen CSS is generated, this option will contain the files that have been imported.\n\n#### options.global\nType: `JSON Object`\nDefault value: `{}`\n\nAn literal object containing global variables that will be defined for the code. The key is the variables name, the value is the variable value.\n\nValues are converted to Roole values the same way as how the returning values of [builtin functions](http://roole.org/api/#builtin) are converted.\n\n\n## License\n\nCopyright 2014 Christopher EnyTC\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "_id": "gulp-roole@0.1.0",
  "dist": {
    "shasum": "fcd3cf143057161893ef87cf76a0caf6b3d33ac5"
  },
  "_from": "gulp-roole@latest",
  "_resolved": "https://registry.npmjs.org/gulp-roole/-/gulp-roole-0.1.0.tgz"
}
